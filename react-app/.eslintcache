[{"E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\index.js":"1","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\App.js":"2","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\reportWebVitals.js":"3","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\actions\\store.js":"4","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\reducers\\index.js":"5","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\reducers\\employee.js":"6","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\actions\\employee.js":"7","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\actions\\api.js":"8","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\components\\Employees.js":"9","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\components\\EmployeeForm.js":"10","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\serviceWorker.js":"11","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\components\\UseForm.js":"12"},{"size":452,"mtime":1611851036373,"results":"13","hashOfConfig":"14"},{"size":558,"mtime":1611851120243,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":337,"mtime":1611851015283,"results":"17","hashOfConfig":"14"},{"size":138,"mtime":1611851025981,"results":"18","hashOfConfig":"14"},{"size":919,"mtime":1611855716046,"results":"19","hashOfConfig":"14"},{"size":1555,"mtime":1611885529615,"results":"20","hashOfConfig":"14"},{"size":466,"mtime":1611915805661,"results":"21","hashOfConfig":"14"},{"size":3839,"mtime":1612143248574,"results":"22","hashOfConfig":"14"},{"size":6431,"mtime":1612143271815,"results":"23","hashOfConfig":"14"},{"size":5003,"mtime":1611851223248,"results":"24","hashOfConfig":"14"},{"size":808,"mtime":1611851023418,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1hl2c6c",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\index.js",[],["56","57"],"E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\App.js",["58"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { store } from \"./actions/store\";\nimport { Provider } from \"react-redux\";\nimport Employees from './components/Employees';\nimport { Container } from \"@material-ui/core\";\nimport { ToastProvider } from \"react-toast-notifications\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToastProvider autoDismiss={true}>\n        <Container maxWidth=\"lg\">\n          <Employees />\n        </Container>\n      </ToastProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\reportWebVitals.js",[],"E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\actions\\store.js",[],"E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\reducers\\index.js",[],"E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\reducers\\employee.js",["59","60"],"import { ACTION_TYPES } from \"../actions/employee\";\r\nconst initialState = {\r\n    list: []\r\n}\r\n\r\n\r\nexport const employee = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                list: [...action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.CREATE:\r\n            return {\r\n                ...state,\r\n                list: [...state.list, action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.UPDATE:\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => x.id == action.payload.id ? action.payload : x)\r\n            }\r\n\r\n        case ACTION_TYPES.DELETE:\r\n            return {\r\n                ...state,\r\n                list: state.list.filter(x => x.id != action.payload)\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\actions\\employee.js",[],"E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\actions\\api.js",["61"],"import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:3862/\"\r\n\r\n\r\n\r\nexport default {\r\n\r\n    employee(url = baseUrl + 'Employee/') {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n}","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\components\\Employees.js",["62"],"E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\components\\EmployeeForm.js",["63","64","65","66","67","68"],"import React, { useEffect } from \"react\";\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport useForm from \"./UseForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/employee\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues = {\r\n    EmployeeName:'',\r\n    Departement:'',\r\n    Email:'',\r\n    DOJ:'',\r\n\r\n}\r\n\r\nconst EmployeeForm = ({ classes, ...props }) => {\r\n\r\n    //toast msg.\r\n    const { addToast } = useToasts()\r\n\r\n    //validate()\r\n    //validate({fullName:'jenny'})\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('EmployeeName' in fieldValues)\r\n            temp.EmployeeName = fieldValues.EmployeeName ? \"\" : \"This field is required.\"\r\n        if ('Departement' in fieldValues)\r\n            temp.Departement = fieldValues.Departement ? \"\" : \"This field is required.\"\r\n        if ('Email' in fieldValues)\r\n            temp.Email = (/^$|.+@.+..+/).test(fieldValues.Email) ? \"\" : \"Email is not valid.\"\r\n        if ('DOJ' in fieldValues)\r\n            temp.DOJ = fieldValues.DOJ ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n    //material-ui select\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const onSuccess = () => {\r\n                resetForm()\r\n                addToast(\"Submitted successfully\", { appearance: 'success' })\r\n            }\r\n            if (props.currentId == 0)\r\n                props.createEmployee(values, onSuccess)\r\n            else\r\n                props.updateEmployee(props.currentId, values, onSuccess)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.currentId != 0) {\r\n            setValues({\r\n                ...props.employeeList.find(x => x.id == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    }, [props.currentId])\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        name=\"EmployeeName\"\r\n                        variant=\"outlined\"\r\n                        label=\"Name\"\r\n                        value={values.EmployeeName}\r\n                        onChange={handleInputChange}\r\n                        {...(errors.EmployeeName && { error: true, helperText: errors.EmployeeName })}\r\n                    />\r\n                    <TextField\r\n                        name=\"Email\"\r\n                        variant=\"outlined\"\r\n                        label=\"Email\"\r\n                        value={values.Email}\r\n                        onChange={handleInputChange}\r\n                        {...(errors.Email && { error: true, helperText: errors.Email })}\r\n                    />\r\n                    <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.Departement && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Departement</InputLabel>\r\n                        <Select\r\n                            name=\"Departement\"\r\n                            value={values.Departement}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Select Departement</MenuItem>\r\n                            <MenuItem value=\"DAD\">DAD</MenuItem>\r\n                            <MenuItem value=\"Finance\">Finance</MenuItem>\r\n                        </Select>\r\n                        {errors.Departement && <FormHelperText>{errors.Departement}</FormHelperText>}\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n\r\n                    <TextField\r\n                        name=\"DOJ\"\r\n                        type=\"date\"\r\n                        variant=\"outlined\"\r\n                        value={values.DOJ}\r\n                        label=\"Date On Job\"\r\n                        className={classes.textField}\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        onChange={handleInputChange}\r\n                        {...(errors.mobile && { error: true, helperText: errors.mobile })}\r\n                    />\r\n                    \r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            className={classes.smMargin}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className={classes.smMargin}\r\n                            onClick={resetForm}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    employeeList: state.employee.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    createEmployee: actions.create,\r\n    updateEmployee: actions.update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(EmployeeForm));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\serviceWorker.js",[],"E:\\file project\\OJT\\crud\\Project1\\react-app\\src\\components\\UseForm.js",["69","70"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        const fieldValue = { [name]: value }\r\n        setValues({\r\n            ...values,\r\n            ...fieldValue\r\n        })\r\n        validate(fieldValue)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValues\r\n        })\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\n\r\nexport default useForm;",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":25,"column":48,"nodeType":"81","messageId":"82","endLine":25,"endColumn":50},{"ruleId":"79","severity":1,"message":"83","line":31,"column":51,"nodeType":"81","messageId":"82","endLine":31,"endColumn":53},{"ruleId":"84","severity":1,"message":"85","line":7,"column":1,"nodeType":"86","endLine":18,"endColumn":2},{"ruleId":"87","severity":1,"message":"88","line":29,"column":8,"nodeType":"89","endLine":29,"endColumn":10,"suggestions":"90"},{"ruleId":"79","severity":1,"message":"80","line":53,"column":25,"nodeType":"81","messageId":"82","endLine":53,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":54,"column":53,"nodeType":"81","messageId":"82","endLine":54,"endColumn":55},{"ruleId":"79","severity":1,"message":"80","line":80,"column":33,"nodeType":"81","messageId":"82","endLine":80,"endColumn":35},{"ruleId":"79","severity":1,"message":"83","line":88,"column":29,"nodeType":"81","messageId":"82","endLine":88,"endColumn":31},{"ruleId":"79","severity":1,"message":"80","line":90,"column":54,"nodeType":"81","messageId":"82","endLine":90,"endColumn":56},{"ruleId":"87","severity":1,"message":"91","line":94,"column":8,"nodeType":"89","endLine":94,"endColumn":25,"suggestions":"92"},{"ruleId":"75","severity":1,"message":"93","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"94","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["97"],"React Hook useEffect has missing dependencies: 'props.employeeList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.",["98"],"'React' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [props]",{"range":"103","text":"104"},"Update the dependencies array to be: [props.currentId, props.employeeList, setErrors, setValues]",{"range":"105","text":"106"},[890,892],"[props]",[2806,2823],"[props.currentId, props.employeeList, setErrors, setValues]"]